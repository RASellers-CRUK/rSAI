modfc<-NA
} else {
anot$modfc<-anot$BLANK
}
anot$ID<-make.names(anot$ID)
anot$cond<-anot$cond
anot$cond<-as.factor(anot$cond)
anot<-anot[which(anot$cond==cond1 | anot$cond==cond2),]
anot$cond<-droplevels(anot$cond)
anot$cond<-relevel(anot$cond,cond1)
anot<-anot[order(anot$cond),]
dat<-dat[,match(anot$ID,colnames(dat))]
raw <- dat
if(is.na(modfc)) {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ cond)
} else {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ modfc + cond)
}
Rdat<-rlog(dds)
dat<-assay(Rdat)
des<-DESeq(dds, quiet = T)
nCount<-counts(des, normalized=T)
colnames(nCount)<-paste("norm",colnames(nCount),sep = "_")
res<-lfcShrink(des, contrast = c("cond", cond1, cond2), type = "normal")
res_r<-as.data.frame(res)
res_r<-cbind(res_r,raw,nCount)
res_r<-res_r[order(res_r$padj),]
res_f<-res_r[which(res_r$padj<=0.05),]
write.table(data.frame(GeneID=rownames(res_r),res_r), "results_full-f.txt", sep = "\t", row.names = F)
if(nrow(res_f)>0) {
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("ENSEMBL","SYMBOL"),"ENSEMBL")
rownames(res_f)<-conv$SYMBOL[match(rownames(res_f),conv$ENSEMBL)]
}
write.table(data.frame(GeneID=rownames(res_f),res_f), "results_pAd05-f.txt", sep = "\t", row.names = F)
print(data.frame(anot,tot_reads_assigned=colSums(raw)))
summary(res)
print(paste(length(which(rowSums(raw)>=1)),"genes expressed with 1+ read expressed in any sample."))
print(paste(length(which(rowMin(as.matrix(raw))>=1)),"genes expressed with 1+ read expressed in all samples."))
tdat<-t(dat)
rPCA<-prcomp(tdat,center = T,.scale = T)
pcolors<-c("salmon","black")
rc <- pcolors[match(anot$cond,levels(anot$cond))]
grps<-anot$cond
ggplot(as.data.frame(rPCA$x)) + geom_point(aes(PC1,PC2,col=grps)) + scale_color_manual(values = c("salmon","black")) +
geom_text_repel(aes(PC1,PC2,col=grps),label = rownames(tdat), size=3) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5)) +
xlab(paste0("PC1: ",round(summary(rPCA)$importance[2,1]*100,2),"%")) +
ylab(paste0("PC2: ",round(summary(rPCA)$importance[2,2]*100,2),"%"))
invisible(dev.copy(png, paste("PCA of Normalised Counts for brain_UVR vs brain_nonUVR", ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off());
plotPCA(Rdat, intgroup = "cond") + scale_color_manual(values = c("salmon","black")) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5))
Colours<-rev(viridis::viridis(120))
dist.mat<-as.matrix(dist(t(dat)))
heatmap.2(dist.mat, col = Colours, trace = "none", density.info = "none", cexRow = 0.6, cexCol = 0.6, cellnote = round(dist.mat, digits = 2), notecol = "yellow", RowSideColors = rc, ColSideColors = rc, main = "Pairwise Sample Distances")
print(paste(nrow(res_f), "genes identified as significant (pAdj<0.05) using DESeq2."))
if(nrow(res_f) == 0) { knitr::knit_exit() } else { head(res_f[,c(1:2,6)], 50) }
head(res_f[order(res_f$log2FoldChange, decreasing = T),c(1:2,6)], 10)
head(res_f[order(res_f$log2FoldChange, decreasing = F),c(1:2,6)], 10)
fcthresh <- 0
anot_hmap<-data.frame(cond=anot$cond)
rownames(anot_hmap)<-anot$ID
cond <- c("salmon","black")
names(cond) <- levels(anot$cond)
anot_colours<-list(cond=cond)
res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
res_f2<-res_f[order(abs(res_f2$log2FoldChange),decreasing=T),]
if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
if(nrow(res_f2) <= 20) {fcthresh <- 2; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
if(nrow(res_f2) <= 20) {fcthresh <- 1; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
if(nrow(res_f2) < 1) {fcthresh <- NULL; print("No DEGs displayed absolute log2 fold change values of >1")}
if(!is.null(fcthresh) & nrow(res_f2)>1) {res_f2<-dat[match(rownames(res_f2),rownames(dat)),]; GS<-as.data.frame(rownames(res_f2)); pheatmap(res_f2, col = greenred(100), cellwidth = 10, cellheight = 4, fontsize_row = 4, fontsize_col = 6, main = paste("Heatmap of DEGs  [abs(log2FC>=", fcthresh, ")]", sep = ""), scale = "row", annotation_col = anot_hmap, annotation_colors = anot_colours, clustering_method = "complete", border_color = NA, angle_col = "45", clustering_distance_cols = "euclidean", annotation_legend = T); invisible(dev.copy(png, paste("Heatmap of DEGs log2FC", fcthresh, ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off())} else {
print("1 DEG cannot produce a Heatmap!!!")
}
res_u<-res_r[which(is.na(match(rownames(res_r),rownames(res_f)))),]
ggplot() + geom_point(size = 0.7, aes(x = res_u$baseMean, y = res_u$log2FoldChange, colour = "black"), alpha = 0.7) + geom_point(size = 0.7, aes(x = res_f$baseMean, y = res_f$log2FoldChange, colour = "red"), alpha = 0.7) + xlab("Mean Expression") + ylab(expression(paste(Log[2],"Fold Change", sep = " "))) + scale_colour_manual(name = "Legend", values = c("black"="black", "red"="red"), labels = c("pAdj > 0.05", "pAdj < 0.05")) + xlim(c(0,max(res_f$baseMean))) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5))
ggplot() + geom_point(size = 0.7, aes(x = res_u$log2FoldChange, y = -log10(res_u$padj), colour = "black"), alpha = 0.7) + geom_point(size = 0.7, aes(x = res_f$log2FoldChange, y = -log10(res_f$padj), colour = "red"), alpha = 0.7) + ylab(expression(paste(-Log[10],"pAdj", sep = " "))) + xlab(expression(paste(Log[2],"Fold Change", sep = " "))) + scale_colour_manual(name = "Legend", values = c("black"="black", "red"="red"), labels = c("pAdj > 0.05", "pAdj < 0.05")) + ylim(c(0,max(-log10(res_f$padj[which(!is.infinite(res_f$padj) & res_f$padj > 0)])))) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5))
if(nrow(res_f)>1) {
tres_fn<-t(dat[match(rownames(res_f),rownames(dat)),])
tres_fn<-tres_fn[,which(apply(tres_fn,2,sum)!=0)]
rPCA<-prcomp(tres_fn, center = T, scale. = T)
ggplot(as.data.frame(rPCA$x)) + geom_point(aes(PC1,PC2,col=grps)) + scale_color_manual(values = c("salmon","black")) +
geom_text_repel(aes(PC1,PC2,col=grps),label = rownames(tdat), size=3) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5)) +
xlab(paste0("PC1: ",round(summary(rPCA)$importance[2,1]*100,2),"%")) +
ylab(paste0("PC2: ",round(summary(rPCA)$importance[2,2]*100,2),"%"))
} else {
print("1 DEG cannot produce a PCA!!!")
}
nrow(res_f)
tres_fn<-t(dat[match(rownames(res_f),rownames(dat)),])
tres_fn<-tres_fn[,which(apply(tres_fn,2,sum)!=0)]
rPCA<-prcomp(tres_fn, center = T, scale. = T)
tres_fn
tres_fn<-t(dat[match(rownames(res_f),rownames(dat)),])
tres_fn
conv
res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
res_f2
fcthresh <- 0
anot_hmap<-data.frame(cond=anot$cond)
rownames(anot_hmap)<-anot$ID
cond <- c("salmon","black")
names(cond) <- levels(anot$cond)
anot_colours<-list(cond=cond)
res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
res_f2
res_f2<-res_f[order(abs(res_f2$log2FoldChange),decreasing=T),]
res_f2
if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
res_f2<-res_f[order(abs(res_f2$log2FoldChange),decreasing=T),]
if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
if(nrow(res_f2) <= 20) {fcthresh <- 2; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
res_f2
resres_f2_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
library(DESeq2)
library(ggplot2)
library(gplots)
library(viridis)
library(pheatmap)
library(ggrepel)
library(org.Mm.eg.db)
cond1<-"brain_UVR"
cond2<-"brain_nonUVR"
modfc<-"BLANK"
knitr::opts_chunk$set(echo = FALSE, dpi=128, fig.path="figures/")
dat<-read.table("../count_ss.txt", sep = "\t", header = T, stringsAsFactors = F, row.names = 1)
anot<-read.table("../anot_ss.txt", sep = "\t", header = T, stringsAsFactors = T)
anot$BLANK<-0
if(modfc=="BLANK") {
modfc<-NA
} else {
anot$modfc<-anot$BLANK
}
anot$ID<-make.names(anot$ID)
anot$cond<-anot$cond
anot$cond<-as.factor(anot$cond)
anot<-anot[which(anot$cond==cond1 | anot$cond==cond2),]
anot$cond<-droplevels(anot$cond)
anot$cond<-relevel(anot$cond,cond1)
anot<-anot[order(anot$cond),]
dat<-dat[,match(anot$ID,colnames(dat))]
raw <- dat
if(is.na(modfc)) {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ cond)
} else {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ modfc + cond)
}
Rdat<-rlog(dds)
dat<-assay(Rdat)
des<-DESeq(dds, quiet = T)
nCount<-counts(des, normalized=T)
colnames(nCount)<-paste("norm",colnames(nCount),sep = "_")
res<-lfcShrink(des, contrast = c("cond", cond1, cond2), type = "normal")
res_r<-as.data.frame(res)
res_r<-cbind(res_r,raw,nCount)
res_r<-res_r[order(res_r$padj),]
res_f<-res_r[which(res_r$padj<=0.05),]
write.table(data.frame(GeneID=rownames(res_r),res_r), "results_full-f.txt", sep = "\t", row.names = F)
if(nrow(res_f)>0) {
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("ENSEMBL","SYMBOL"),"ENSEMBL")
rownames(res_f)<-conv$SYMBOL[match(rownames(res_f),conv$ENSEMBL)]
}
write.table(data.frame(GeneID=rownames(res_f),res_f), "results_pAd05-f.txt", sep = "\t", row.names = F)
print(data.frame(anot,tot_reads_assigned=colSums(raw)))
summary(res)
print(paste(length(which(rowSums(raw)>=1)),"genes expressed with 1+ read expressed in any sample."))
print(paste(length(which(rowMin(as.matrix(raw))>=1)),"genes expressed with 1+ read expressed in all samples."))
tdat<-t(dat)
rPCA<-prcomp(tdat,center = T,.scale = T)
pcolors<-c("salmon","black")
rc <- pcolors[match(anot$cond,levels(anot$cond))]
grps<-anot$cond
ggplot(as.data.frame(rPCA$x)) + geom_point(aes(PC1,PC2,col=grps)) + scale_color_manual(values = c("salmon","black")) +
geom_text_repel(aes(PC1,PC2,col=grps),label = rownames(tdat), size=3) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5)) +
xlab(paste0("PC1: ",round(summary(rPCA)$importance[2,1]*100,2),"%")) +
ylab(paste0("PC2: ",round(summary(rPCA)$importance[2,2]*100,2),"%"))
invisible(dev.copy(png, paste("PCA of Normalised Counts for brain_UVR vs brain_nonUVR", ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off());
plotPCA(Rdat, intgroup = "cond") + scale_color_manual(values = c("salmon","black")) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5))
Colours<-rev(viridis::viridis(120))
dist.mat<-as.matrix(dist(t(dat)))
heatmap.2(dist.mat, col = Colours, trace = "none", density.info = "none", cexRow = 0.6, cexCol = 0.6, cellnote = round(dist.mat, digits = 2), notecol = "yellow", RowSideColors = rc, ColSideColors = rc, main = "Pairwise Sample Distances")
print(paste(nrow(res_f), "genes identified as significant (pAdj<0.05) using DESeq2."))
if(nrow(res_f) == 0) { knitr::knit_exit() } else { head(res_f[,c(1:2,6)], 50) }
head(res_f[order(res_f$log2FoldChange, decreasing = T),c(1:2,6)], 10)
head(res_f[order(res_f$log2FoldChange, decreasing = F),c(1:2,6)], 10)
fcthresh <- 0
anot_hmap<-data.frame(cond=anot$cond)
rownames(anot_hmap)<-anot$ID
cond <- c("salmon","black")
names(cond) <- levels(anot$cond)
anot_colours<-list(cond=cond)
res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
res_f2<-res_f[order(abs(res_f2$log2FoldChange),decreasing=T),]
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) <= 20) {fcthresh <- 2; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) <= 20) {fcthresh <- 1; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) < 1) {fcthresh <- NULL; print("No DEGs displayed absolute log2 fold change values of >1")}
if(!is.null(fcthresh) & nrow(res_f2)>1) {res_f2<-dat[match(rownames(res_f2),rownames(dat)),]; GS<-as.data.frame(rownames(res_f2)); pheatmap(res_f2, col = greenred(100), cellwidth = 10, cellheight = 4, fontsize_row = 4, fontsize_col = 6, main = paste("Heatmap of DEGs  [abs(log2FC>=", fcthresh, ")]", sep = ""), scale = "row", annotation_col = anot_hmap, annotation_colors = anot_colours, clustering_method = "complete", border_color = NA, angle_col = "45", clustering_distance_cols = "euclidean", annotation_legend = T); invisible(dev.copy(png, paste("Heatmap of DEGs log2FC", fcthresh, ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off())} else {
print("1 DEG cannot produce a Heatmap!!!")
}
res_f2<-dat[match(rownames(res_f2),rownames(dat)),]
res_f2
if(!is.null(fcthresh) & nrow(res_f2)>1) {res_f2<-dat[match(conv$ENSEMBL,rownames(dat)),]; GS<-as.data.frame(rownames(res_f2)); pheatmap(res_f2, col = greenred(100), cellwidth = 10, cellheight = 4, fontsize_row = 4, fontsize_col = 6, main = paste("Heatmap of DEGs  [abs(log2FC>=", fcthresh, ")]", sep = ""), scale = "row", annotation_col = anot_hmap, annotation_colors = anot_colours, clustering_method = "complete", border_color = NA, angle_col = "45", clustering_distance_cols = "euclidean", annotation_legend = T); invisible(dev.copy(png, paste("Heatmap of DEGs log2FC", fcthresh, ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off())} else {
print("1 DEG cannot produce a Heatmap!!!")
}
if(!is.null(fcthresh) & nrow(res_f2)>1) {res_f2<-dat[match(conv$ENSEMBL,rownames(dat)),]; rownames(res_f2)<-conv$SYMBOL; GS<-as.data.frame(rownames(res_f2)); pheatmap(res_f2, col = greenred(100), cellwidth = 10, cellheight = 4, fontsize_row = 4, fontsize_col = 6, main = paste("Heatmap of DEGs  [abs(log2FC>=", fcthresh, ")]", sep = ""), scale = "row", annotation_col = anot_hmap, annotation_colors = anot_colours, clustering_method = "complete", border_color = NA, angle_col = "45", clustering_distance_cols = "euclidean", annotation_legend = T); invisible(dev.copy(png, paste("Heatmap of DEGs log2FC", fcthresh, ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off())} else {
print("1 DEG cannot produce a Heatmap!!!")
}
library(DESeq2)
library(ggplot2)
library(gplots)
library(viridis)
library(pheatmap)
library(ggrepel)
library(org.Mm.eg.db)
cond1<-"liver_UVR"
cond2<-"liver_nonUVR"
modfc<-"BLANK"
knitr::opts_chunk$set(echo = FALSE, dpi=128, fig.path="figures/")
dat<-read.table("../count_ss.txt", sep = "\t", header = T, stringsAsFactors = F, row.names = 1)
anot<-read.table("../anot_ss.txt", sep = "\t", header = T, stringsAsFactors = T)
anot$BLANK<-0
if(modfc=="BLANK") {
modfc<-NA
} else {
anot$modfc<-anot$BLANK
}
anot$ID<-make.names(anot$ID)
anot$cond<-anot$cond
anot$cond<-as.factor(anot$cond)
anot<-anot[which(anot$cond==cond1 | anot$cond==cond2),]
anot$cond<-droplevels(anot$cond)
anot$cond<-relevel(anot$cond,cond1)
anot<-anot[order(anot$cond),]
dat<-dat[,match(anot$ID,colnames(dat))]
raw <- dat
if(is.na(modfc)) {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ cond)
} else {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ modfc + cond)
}
Rdat<-rlog(dds)
dat<-assay(Rdat)
des<-DESeq(dds, quiet = T)
nCount<-counts(des, normalized=T)
colnames(nCount)<-paste("norm",colnames(nCount),sep = "_")
res<-lfcShrink(des, contrast = c("cond", cond1, cond2), type = "normal")
res_r<-as.data.frame(res)
res_r<-cbind(res_r,raw,nCount)
res_r<-res_r[order(res_r$padj),]
res_f<-res_r[which(res_r$padj<=0.05),]
write.table(data.frame(GeneID=rownames(res_r),res_r), "results_full-f.txt", sep = "\t", row.names = F)
if(nrow(res_f)>0) {
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("ENSEMBL","SYMBOL"),"ENSEMBL")
rownames(res_f)<-conv$SYMBOL[match(rownames(res_f),conv$ENSEMBL)]
}
res_f
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("ENSEMBL","SYMBOL"),"ENSEMBL")
conv$SYMBOL[match(rownames(res_f),conv$ENSEMBL)]
conv
conv$FIN<-ifelse(is.na(conv$SYMBOL),conv$ENSEMBL,conv$SYMBOL)
rownames(res_f)
conv$FIN
library(DESeq2)
library(ggplot2)
library(gplots)
library(viridis)
library(pheatmap)
library(ggrepel)
library(org.Mm.eg.db)
cond1<-"liver_UVR"
cond2<-"liver_nonUVR"
modfc<-"BLANK"
knitr::opts_chunk$set(echo = FALSE, dpi=128, fig.path="figures/")
dat<-read.table("../count_ss.txt", sep = "\t", header = T, stringsAsFactors = F, row.names = 1)
anot<-read.table("../anot_ss.txt", sep = "\t", header = T, stringsAsFactors = T)
anot$BLANK<-0
if(modfc=="BLANK") {
modfc<-NA
} else {
anot$modfc<-anot$BLANK
}
anot$ID<-make.names(anot$ID)
anot$cond<-anot$cond
anot$cond<-as.factor(anot$cond)
anot<-anot[which(anot$cond==cond1 | anot$cond==cond2),]
anot$cond<-droplevels(anot$cond)
anot$cond<-relevel(anot$cond,cond1)
anot<-anot[order(anot$cond),]
dat<-dat[,match(anot$ID,colnames(dat))]
raw <- dat
if(is.na(modfc)) {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ cond)
} else {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ modfc + cond)
}
Rdat<-rlog(dds)
dat<-assay(Rdat)
des<-DESeq(dds, quiet = T)
nCount<-counts(des, normalized=T)
colnames(nCount)<-paste("norm",colnames(nCount),sep = "_")
res<-lfcShrink(des, contrast = c("cond", cond1, cond2), type = "normal")
res_r<-as.data.frame(res)
res_r<-cbind(res_r,raw,nCount)
res_r<-res_r[order(res_r$padj),]
res_f<-res_r[which(res_r$padj<=0.05),]
write.table(data.frame(GeneID=rownames(res_r),res_r), "results_full-f.txt", sep = "\t", row.names = F)
if(nrow(res_f)>0) {
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("ENSEMBL","SYMBOL"),"ENSEMBL")
conv$FIN<-ifelse(is.na(conv$SYMBOL),conv$ENSEMBL,conv$SYMBOL)
rownames(res_f)<-conv$FIN[match(rownames(res_f),conv$ENSEMBL)]
}
write.table(data.frame(GeneID=rownames(res_f),res_f), "results_pAd05-f.txt", sep = "\t", row.names = F)
print(data.frame(anot,tot_reads_assigned=colSums(raw)))
summary(res)
print(paste(length(which(rowSums(raw)>=1)),"genes expressed with 1+ read expressed in any sample."))
print(paste(length(which(rowMin(as.matrix(raw))>=1)),"genes expressed with 1+ read expressed in all samples."))
tdat<-t(dat)
rPCA<-prcomp(tdat,center = T,.scale = T)
pcolors<-c("salmon","black")
rc <- pcolors[match(anot$cond,levels(anot$cond))]
grps<-anot$cond
ggplot(as.data.frame(rPCA$x)) + geom_point(aes(PC1,PC2,col=grps)) + scale_color_manual(values = c("salmon","black")) +
geom_text_repel(aes(PC1,PC2,col=grps),label = rownames(tdat), size=3) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5)) +
xlab(paste0("PC1: ",round(summary(rPCA)$importance[2,1]*100,2),"%")) +
ylab(paste0("PC2: ",round(summary(rPCA)$importance[2,2]*100,2),"%"))
invisible(dev.copy(png, paste("PCA of Normalised Counts for liver_UVR vs liver_nonUVR", ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off());
plotPCA(Rdat, intgroup = "cond") + scale_color_manual(values = c("salmon","black")) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5))
Colours<-rev(viridis::viridis(120))
dist.mat<-as.matrix(dist(t(dat)))
heatmap.2(dist.mat, col = Colours, trace = "none", density.info = "none", cexRow = 0.6, cexCol = 0.6, cellnote = round(dist.mat, digits = 2), notecol = "yellow", RowSideColors = rc, ColSideColors = rc, main = "Pairwise Sample Distances")
print(paste(nrow(res_f), "genes identified as significant (pAdj<0.05) using DESeq2."))
if(nrow(res_f) == 0) { knitr::knit_exit() } else { head(res_f[,c(1:2,6)], 50) }
head(res_f[order(res_f$log2FoldChange, decreasing = T),c(1:2,6)], 10)
head(res_f[order(res_f$log2FoldChange, decreasing = F),c(1:2,6)], 10)
fcthresh <- 0
anot_hmap<-data.frame(cond=anot$cond)
rownames(anot_hmap)<-anot$ID
cond <- c("salmon","black")
names(cond) <- levels(anot$cond)
anot_colours<-list(cond=cond)
res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
res_f2<-res_f[order(abs(res_f2$log2FoldChange),decreasing=T),]
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) <= 20) {fcthresh <- 2; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) <= 20) {fcthresh <- 1; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) < 1) {fcthresh <- NULL; print("No DEGs displayed absolute log2 fold change values of >1")}
if(!is.null(fcthresh) & nrow(res_f2)>1) {res_f2<-dat[match(conv$FIN,rownames(dat)),]; rownames(res_f2)<-conv$SYMBOL; GS<-as.data.frame(rownames(res_f2)); pheatmap(res_f2, col = greenred(100), cellwidth = 10, cellheight = 4, fontsize_row = 4, fontsize_col = 6, main = paste("Heatmap of DEGs  [abs(log2FC>=", fcthresh, ")]", sep = ""), scale = "row", annotation_col = anot_hmap, annotation_colors = anot_colours, clustering_method = "complete", border_color = NA, angle_col = "45", clustering_distance_cols = "euclidean", annotation_legend = T); invisible(dev.copy(png, paste("Heatmap of DEGs log2FC", fcthresh, ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off())} else {
print("1 DEG cannot produce a Heatmap!!!")
}
if(!is.null(fcthresh) & nrow(res_f2)>1) {res_f2<-dat[match(conv$FIN,rownames(dat)),]; rownames(res_f2)<-conv$SYMBOL; GS<-as.data.frame(rownames(res_f2)); pheatmap(res_f2, col = greenred(100), cellwidth = 10, cellheight = 4, fontsize_row = 4, fontsize_col = 6, main = paste("Heatmap of DEGs  [abs(log2FC>=", fcthresh, ")]", sep = ""), scale = "row", annotation_col = anot_hmap, annotation_colors = anot_colours, clustering_method = "complete", border_color = NA, angle_col = "45", clustering_distance_cols = "euclidean", annotation_legend = T); invisible(dev.copy(png, paste("Heatmap of DEGs log2FC", fcthresh, ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off())} else {
print("1 DEG cannot produce a Heatmap!!!")
}
library(DESeq2)
library(ggplot2)
library(gplots)
library(viridis)
library(pheatmap)
library(ggrepel)
library(org.Mm.eg.db)
cond1<-"brain_UVR"
cond2<-"brain_nonUVR"
modfc<-"BLANK"
knitr::opts_chunk$set(echo = FALSE, dpi=128, fig.path="figures/")
dat<-read.table("../count_ss.txt", sep = "\t", header = T, stringsAsFactors = F, row.names = 1)
anot<-read.table("../anot_ss.txt", sep = "\t", header = T, stringsAsFactors = T)
anot$BLANK<-0
if(modfc=="BLANK") {
modfc<-NA
} else {
anot$modfc<-anot$BLANK
}
anot$ID<-make.names(anot$ID)
anot$cond<-anot$cond
anot$cond<-as.factor(anot$cond)
anot<-anot[which(anot$cond==cond1 | anot$cond==cond2),]
anot$cond<-droplevels(anot$cond)
anot$cond<-relevel(anot$cond,cond1)
anot<-anot[order(anot$cond),]
dat<-dat[,match(anot$ID,colnames(dat))]
raw <- dat
if(is.na(modfc)) {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ cond)
} else {
dds<-DESeqDataSetFromMatrix(dat,anot, ~ modfc + cond)
}
Rdat<-rlog(dds)
dat<-assay(Rdat)
des<-DESeq(dds, quiet = T)
nCount<-counts(des, normalized=T)
colnames(nCount)<-paste("norm",colnames(nCount),sep = "_")
res<-lfcShrink(des, contrast = c("cond", cond1, cond2), type = "normal")
res_r<-as.data.frame(res)
res_r<-cbind(res_r,raw,nCount)
res_r<-res_r[order(res_r$padj),]
res_f<-res_r[which(res_r$padj<=0.05),]
write.table(data.frame(GeneID=rownames(res_r),res_r), "results_full-f.txt", sep = "\t", row.names = F)
if(nrow(res_f)>0) {
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("ENSEMBL","SYMBOL"),"ENSEMBL")
conv$FIN<-ifelse(is.na(conv$SYMBOL),conv$ENSEMBL,conv$SYMBOL)
rownames(res_f)<-conv$FIN[match(rownames(res_f),conv$ENSEMBL)]
}
write.table(data.frame(GeneID=rownames(res_f),res_f), "results_pAd05-f.txt", sep = "\t", row.names = F)
print(data.frame(anot,tot_reads_assigned=colSums(raw)))
summary(res)
print(paste(length(which(rowSums(raw)>=1)),"genes expressed with 1+ read expressed in any sample."))
print(paste(length(which(rowMin(as.matrix(raw))>=1)),"genes expressed with 1+ read expressed in all samples."))
tdat<-t(dat)
rPCA<-prcomp(tdat,center = T,.scale = T)
pcolors<-c("salmon","black")
rc <- pcolors[match(anot$cond,levels(anot$cond))]
grps<-anot$cond
ggplot(as.data.frame(rPCA$x)) + geom_point(aes(PC1,PC2,col=grps)) + scale_color_manual(values = c("salmon","black")) +
geom_text_repel(aes(PC1,PC2,col=grps),label = rownames(tdat), size=3) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5)) +
xlab(paste0("PC1: ",round(summary(rPCA)$importance[2,1]*100,2),"%")) +
ylab(paste0("PC2: ",round(summary(rPCA)$importance[2,2]*100,2),"%"))
invisible(dev.copy(png, paste("PCA of Normalised Counts for brain_UVR vs brain_nonUVR", ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off());
plotPCA(Rdat, intgroup = "cond") + scale_color_manual(values = c("salmon","black")) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5))
Colours<-rev(viridis::viridis(120))
dist.mat<-as.matrix(dist(t(dat)))
heatmap.2(dist.mat, col = Colours, trace = "none", density.info = "none", cexRow = 0.6, cexCol = 0.6, cellnote = round(dist.mat, digits = 2), notecol = "yellow", RowSideColors = rc, ColSideColors = rc, main = "Pairwise Sample Distances")
print(paste(nrow(res_f), "genes identified as significant (pAdj<0.05) using DESeq2."))
if(nrow(res_f) == 0) { knitr::knit_exit() } else { head(res_f[,c(1:2,6)], 50) }
head(res_f[order(res_f$log2FoldChange, decreasing = T),c(1:2,6)], 10)
head(res_f[order(res_f$log2FoldChange, decreasing = F),c(1:2,6)], 10)
fcthresh <- 0
anot_hmap<-data.frame(cond=anot$cond)
rownames(anot_hmap)<-anot$ID
cond <- c("salmon","black")
names(cond) <- levels(anot$cond)
anot_colours<-list(cond=cond)
res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]
res_f2<-res_f[order(abs(res_f2$log2FoldChange),decreasing=T),]
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) <= 20) {fcthresh <- 2; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) <= 20) {fcthresh <- 1; res_f2<-res_f[which(abs(res_f$log2FoldChange)>=fcthresh),]}
# if(nrow(res_f2) > 30) {res_f2<-res_f[1:30,]}
# if(nrow(res_f2) < 1) {fcthresh <- NULL; print("No DEGs displayed absolute log2 fold change values of >1")}
if(!is.null(fcthresh) & nrow(res_f2)>1) {res_f2<-dat[match(conv$ENSEMBL,rownames(dat)),]; rownames(res_f2)<-conv$FIN; GS<-as.data.frame(rownames(res_f2)); pheatmap(res_f2, col = greenred(100), cellwidth = 10, cellheight = 4, fontsize_row = 4, fontsize_col = 6, main = paste("Heatmap of DEGs  [abs(log2FC>=", fcthresh, ")]", sep = ""), scale = "row", annotation_col = anot_hmap, annotation_colors = anot_colours, clustering_method = "complete", border_color = NA, angle_col = "45", clustering_distance_cols = "euclidean", annotation_legend = T); invisible(dev.copy(png, paste("Heatmap of DEGs log2FC", fcthresh, ".png", sep = ""), height = 5000, width = 3000, res = 500)); invisible(dev.off())} else {
print("1 DEG cannot produce a Heatmap!!!")
}
res_u<-res_r[which(is.na(match(rownames(res_r),rownames(res_f)))),]
ggplot() + geom_point(size = 0.7, aes(x = res_u$baseMean, y = res_u$log2FoldChange, colour = "black"), alpha = 0.7) + geom_point(size = 0.7, aes(x = res_f$baseMean, y = res_f$log2FoldChange, colour = "red"), alpha = 0.7) + xlab("Mean Expression") + ylab(expression(paste(Log[2],"Fold Change", sep = " "))) + scale_colour_manual(name = "Legend", values = c("black"="black", "red"="red"), labels = c("pAdj > 0.05", "pAdj < 0.05")) + xlim(c(0,max(res_f$baseMean))) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5))
ggplot() + geom_point(size = 0.7, aes(x = res_u$log2FoldChange, y = -log10(res_u$padj), colour = "black"), alpha = 0.7) + geom_point(size = 0.7, aes(x = res_f$log2FoldChange, y = -log10(res_f$padj), colour = "red"), alpha = 0.7) + ylab(expression(paste(-Log[10],"pAdj", sep = " "))) + xlab(expression(paste(Log[2],"Fold Change", sep = " "))) + scale_colour_manual(name = "Legend", values = c("black"="black", "red"="red"), labels = c("pAdj > 0.05", "pAdj < 0.05")) + ylim(c(0,max(-log10(res_f$padj[which(!is.infinite(res_f$padj) & res_f$padj > 0)])))) + theme_classic() + theme(panel.border = element_rect(colour = "black", fill=NA, size=0.5))
library(clusterProfiler)
rownames(res_f)
enrichKEGG(rownames(res_f))
enrichKEGG(rownames(res_f),organism="mus")
AnonotationDbi::select(rownames(res_f))
AnnotationDbi::select(rownames(res_f))
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("SYMBOL","ENTREZ"),"SYMBOL")
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("SYMBOL","ENTREZID"),"SYMBOL")
conv
eres<-enrichKEGG(conv$ENTREZID,organism="mus")
eres
conv
conv$ENTREZID
eres
eres<-enrichKEGG(conv$ENTREZID,organism="mus")
conv$ENTREZID
eres<-enrichKEGG(conv$ENTREZID,organism="mus",minGSSize=1)
test<-c("135627131","135622948","135605746","135608483","135616587","135613125")
eres<-enrichKEGG(test,organism="mus",minGSSize=1)
eres
eres@result
eres@result
test
conv$ENTREZID
enrichKEGG(conv$ENTREZID,organism="hsa",minGSSize=1)
enrichKEGG(conv$ENTREZID,organism="mus",minGSSize=1)
?enrichKEGG
conv<-AnnotationDbi::select(org.Mm.eg.db,rownames(res_f),c("SYMBOL","ENTREZID"),"SYMBOL")
eres<-enrichKEGG(conv$ENTREZID,organism="hsa",minGSSize=1)
eres<-enrichKEGG(conv$ENTREZID,organism="mmus",minGSSize=1)
search_kegg_organism('ece', by='kegg_code')
search_kegg_organism('mmu', by='kegg_code')
eres<-enrichKEGG(conv$ENTREZID,organism="mmu",minGSSize=1)
eres
eres@result
eres<-enrichKEGG(conv$ENTREZID,organism="mmu",minGSSize=2)
eres
eres@result
keg<-enrichKEGG(conv$ENTREZID,organism="mmu",minGSSize=2)
keg@result$SYMBOL<-sapply(strsplit(keg@result$geneID,split = "/"),
function(t){paste(conv$SYMBOL[match(t,conv$ENTREZID)],collapse = "/")})
keg@result<-keg@result[order(keg@result$qvalue),]
keg@result$`-log10qvalue`<-(-log10(keg@result$qvalue))
keg@result$`percent associated genes`<-(keg@result$Count/length(keg@gene))*100
keg@result$Description<-factor(keg@result$Description,ordered = T,levels=rev(keg@result$Description))
keg@result
(90^2)*2
sqrt((90^2)*2)
setwd("/Users/rsellers/Storage/RB15_2/RS2_remake/functions/cleaned/package/rISI/")
setwd("../rSAI/")
getwd()
devtools::document()
setwd("..")
devtools::create("rSAI")
devtools::create("rSAI")
getwd()
setwd("/Users/rsellers/Storage/RB15_2/RS2_remake/functions/cleaned/package/")
devtools::create("rSAI")
getwd()
setwd("rSAI/")
devtools::document()
?convert_annot_to_geoJSON
